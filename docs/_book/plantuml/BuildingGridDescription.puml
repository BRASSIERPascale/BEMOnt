@startuml

scale 0.5

skinparam class {
  ArrowColor DarkBlue
  ArrowFontColor DarkBlue
  BackgroundColor LightBlue
  BorderColor DarkGrey
}
skinparam stereotypeCBackgroundColor Wheat
skinparam classAttributeFontColor  Green

/'
  Definition of microgrid part
'/

class Microgrid <<ontomg>>
class  Branch <<ontomg>>
class ESBranch <<ontomg>>
class DERBranch <<ontomg>>
class ELBranch <<ontomg>>
class InfraBranch <<ontomg>>

class BranchSwitch <<ontomg>>
class NonRenewableDERBranch <<ontomg>>
class RenewableDERBranch <<ontomg>>
class SolarPowerBranch <<ontomg>>
class WindPowerBranch <<ontomg>>
class Converter <<ontomg>>
class Inverter <<ontomg>>
class AcDcConverter <<ontomg>>
class WindTurbine <<ontomg>>
class SolarCell <<ontomg>>
class FuelCellBranch <<ontomg>>
class CHPPPowerBranch <<ontomg>>
class DieselGenerator <<ontomg>>
class MonophasicInverter <<ontomg>>
class TriphasicInverter <<ontomg>>

class ConductingEquipement <<cim>>
class RectifierInverter <<cim>>

class HydroPowerBranch <<hit2gap>>
class GeoThermalBranch <<hit2gap>>
class BiomassBranch <<hit2gap>>
class OilBranch <<hit2gap>>
class GasBranch <<hit2gap>>
class CoalBranch <<hit2gap>>
class NuclearBranch <<hit2gap>>

class IfcDistributionCircuit <<ifc>>
class IfcDistributionSystem <<ifc>>


/'
    Incorporation of micro-grid description to the building
'/

Microgrid --> Branch: ontomg:hasBranch
Branch --> Branch: ontomg:isComposedOf
Branch <|-- ESBranch
Branch <|-- DERBranch
Branch <|-- ELBranch
Branch <|-- InfraBranch

Branch --> BranchController: hit2gap:hasA

IfcDistributionSystem<|-- IfcDistributionCircuit
BranchController <--> IfcController: owl:equivalentClass
ConductingEquipement <|-- BranchController
InfraBranch <--> IfcDistributionCircuit: owl:equivalentClass
DERBranch <--> IfcDistributionSystem: owl:equivalentClass
ESBranch <--> IfcDistributionElement: owl:equivalentClass
ELBranch <--> IfcDistributionElement: owl:equivalentClass

IfcSystem <|-- IfcDistributionElement

DERBranch --> BranchSwitch: ontomg:hasA
DERBranch<|-- RenewableDERBranch
DERBranch<|-- NonRenewableDERBranch

RenewableDERBranch <|-- SolarPowerBranch
RenewableDERBranch <|-- WindPowerBranch
RenewableDERBranch <|-- HydroPowerBranch
RenewableDERBranch <|-- GeoThermalBranch
RenewableDERBranch <|-- BiomassBranch

SolarPowerBranch--> SolarCell: ontomg:hasA
WindPowerBranch --> WindTurbine: ontomg:hasA

RegulatingCongEq <|-- WindTurbine
RegulatingCongEq <|-- SolarCell

SolarPowerBranch --> Converter: ontomg:hasA
WindPowerBranch --> Converter: ontomg:hasA

RectifierInverter <|-- Converter
Converter <|-- Inverter
Converter <|-- AcDcConverter

Inverter <|-- MonophasicInverter
Inverter <|-- TriphasicInverter


NonRenewableDERBranch <|-- OilBranch
NonRenewableDERBranch <|-- GasBranch
NonRenewableDERBranch <|-- CoalBranch
NonRenewableDERBranch <|-- NuclearBranch
OilBranch <|-- FuelCellBranch
NonRenewableDERBranch <|-- CHPPPowerBranch

FuelCellBranch --> Converter: ontomg:hasA
FuelCellBranch --> DieselGenerator: ontomg:hasA

IfcSystem --> Microgrid: hit2gap:produceEnergy
IfcSystem --> Microgrid: hit2gap:consumesEnergy
IfcSystem --> Microgrid: hit2gap:storageEnergy
IfcSystem --> Microgrid: hit2gap:controlsEnergy
IfcSystem --> Microgrid: hit2gap:measuresEnergy
@enduml