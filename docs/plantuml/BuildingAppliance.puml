@startuml

scale 0.5

skinparam class {
  ArrowColor DarkBlue
  ArrowFontColor DarkBlue
  BackgroundColor LightBlue
  BorderColor DarkGrey
}
skinparam dpi 300
skinparam stereotypeCBackgroundColor Wheat
skinparam classAttributeFontColor  Green

class BuildingAppliance <<hit2gap>>

class StaticBuildingAppliance <<hit2gap>>
class MobileBuildingAppliance <<hit2gap>>

class IfcFlowTerminal <<ifc>>
class Monitoring <<hit2gap>>
class Wereable <<hit2gap>>
class Smartwatch <<hit2gap>>
class Smartphone <<hit2gap>>

class IfcZone <<ifc>>
class IfcActuator <<ifc>>
class IfcAlarm <<ifc>>
class IfcController <<ifc>>
class IfcSensor <<ifc>>
class Meter <<hit2gap>>

class IfcDistributionElement <<ifc>>
class IfcFlowStorageDevice <<ifc>>
class IfcFlowMovingDevice <<ifc>>
class IfcFlowController <<ifc>>
class IfcFlowTreatmentDevice <<ifc>>
class IfcEnergyConversionDevice <<ifc>> {
  hasSetPoint xsd:boolean
}

class Microgrid <<ontomg>>

BuildingAppliance <|-- StaticBuildingAppliance 
BuildingAppliance <|-- MobileBuildingAppliance 

StaticBuildingAppliance <|-- IfcFlowTerminal
StaticBuildingAppliance <|-- Monitoring
MobileBuildingAppliance <|-- Wereable
StaticBuildingAppliance --> IfcZone: hit2gap:isLocatedIn
BuildingAppliance --> BuildingAppliance: hit2gap:contains
Monitoring --> BuildingAppliance: hit2gap:MeasureInputOutput
IfcEnergyConversionDevice --> IfcZone: hit2gap:InputOutput
StaticBuildingAppliance <|-- IfcFlowStorageDevice
StaticBuildingAppliance <|-- IfcFlowMovingDevice
StaticBuildingAppliance <|-- IfcFlowController
StaticBuildingAppliance <|-- IfcFlowTreatmentDevice
StaticBuildingAppliance <|-- IfcEnergyConversionDevice

Wereable <|-- Smartwatch
Wereable <|-- Smartphone

Monitoring <|-- IfcSensor
Monitoring <|-- IfcActuator
Monitoring <|-- IfcAlarm
Monitoring <|-- IfcController
Monitoring <|-- Meter

BuildingAppliance --> Microgrid: hit2gap:produceEnergy
BuildingAppliance --> Microgrid: hit2gap:consumesEnergy
BuildingAppliance --> Microgrid: hit2gap:storageEnergy
BuildingAppliance --> Microgrid: hit2gap:controlsEnergy
BuildingAppliance --> Microgrid: hit2gap:measuresEnergy

@enduml
