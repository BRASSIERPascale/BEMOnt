@startuml

scale 0.2

skinparam class {
  ArrowColor DarkBlue
  ArrowFontColor DarkBlue
  BackgroundColor LightBlue
  BorderColor DarkGrey
}
skinparam stereotypeCBackgroundColor Wheat
skinparam classAttributeFontColor  Green

class IfcActor <<IFC>> {
  id xsd:string
  name xsd:string
}

class IfcOccupant <<IFC>>{
  age xsd:double
  gender xsd:string
  lifestyle xsd:string
  jobType xsd:string
}

class User <<HIT2GAP>>{

}

class Notification <<HIT2GAP>>{

}

class Report <<HIT2GAP>>{

}

class Recommendation <<HIT2GAP>>{

}

class Feedback <<HIT2GAP>>{

}

class Alert <<HIT2GAP>>{

}

class OccupantRole <<HIT2GAP>>{

}

class IfcSpatialStructureElement <<IFC>>{

}

class FeatureOfInterest <<SSN>>{

}

class Observation <<SSN>>{

}

class Property <<SSN>> {

}

class SensorOutput <<SSN>>{

}

class ObservationValue <<SSN>>{

}


class Instant <<Time>>{

}

class DateTimeInterval <<Time>>{

}

class IfcBuilding <<IFC>>{

}

class SampledFeatures <<OGC>>{

}

class SamplingFeatures <<OGC>>{

}

class IfcZone <<IFC>>{

}

class ZoneElement <<HIT2GAP>>{

}

class Driver <<HIT2GAP>>{

}


class OccupantEvent<<HIT2GAP>>{

}

class OccupantCharacteristics <<HIT2GAP>>{
  startWorkTime xsd:DateTime
  endWorkTime xsd:DateTime
}

class EnergyFrugal <<HIT2GAP>>{

}

class EnergyProfligate <<HIT2GAP>>{

}

class EnergyIndiferent <<HIT2GAP>>{

}

class EnvironmentalBuildingFactors <<HIT2GAP>>{

}

class System <<SSN>>{

}

class BuildingState <<HIT2GAP>>{

}

class BuildingSimpleState <<HIT2GAP>>{

}

class BuildingComplexState <<HIT2GAP>>{

}

class EnergyState <<HIT2GAP>>{

}

class Sensor <<SSN>>{

}

class Device <<SSN>>{

}

class TimeBehaviour <<HIT2GAP>>{

}

class Season <<HIT2GAP>>{

}

class Winter <<(I,orchid) HIT2GAP>>{

}
class Spring <<(I,orchid) HIT2GAP>>{

}
class Summer <<(I,orchid) HIT2GAP>>{

}
class Autum <<(I,orchid) HIT2GAP>>{

}

class DayOfWeek <<Time>>{

}

class Needs <<HIT2GAP>>{

}

class EnergyEfficiencyState <<HIT2GAP>>{

}

class ComfortState <<HIT2GAP>>{

}

class OccupantComfort <<HIT2GAP>>{

}

class OccupantDiscomfort <<HIT2GAP>>{

}


class ThermalComfort <<HIT2GAP>>{

}


class ISOAdaptiveComfort <<HIT2GAP>>{

}

class ASHRAEAdaptiveComfort <<HIT2GAP>>{

}

class ASHRAEAdaptiveEnvelope <<HIT2GAP>>{

}

class OtherComfortEnvelope <<HIT2GAP>>{

}


class VisualComfort <<HIT2GAP>>{

}

class AcousticComfort <<HIT2GAP>>{

}

class IAQ <<HIT2GAP>>{

}

class OccupantPreference <<HIT2GAP>>{
  id xsd:string
  minValue xsd:double
  maxValue xsd:double
}

class Luminosity <<I,orchid) HIT2GAP>>{

}

class Noise <<I,orchid) HIT2GAP>>{

}

class Temperature <<I,orchid) HIT2GAP>>{

}

class Actions <<HIT2GAP>>{

}

class SystemActions<<HIT2GAP>>{

}

class Inaction <<HIT2GAP>>{

}

class Modality <<HIT2GAP>>{

}

class SMS <<(I,orchid) HIT2GAP>>{

}
class Email <<(I,orchid) HIT2GAP>>{

}
class Phone <<(I,orchid) HIT2GAP>>{

}

class Role <<HIT2GAP>>{

}
class Manager <<(I,orchid) HIT2GAP>>{

}
class Owner <<(I,orchid) HIT2GAP>>{

}
class Technician <<(I,orchid) HIT2GAP>>{

}

class Privacy <<HIT2GAP>>{

}

class OccupantAttitude <<HIT2GAP>>{
}

class BehaviourModel <<HIT2GAP>>{
}

class ActivityModel <<HIT2GAP>>{
}

class EventModel <<HIT2GAP>>{
}

class EquipementModel <<HIT2GAP>>{
}

class Unit <<QUDT>>{
}

class MechanicElement <<HIT2GAP>>{
}
class ElectricElement <<HIT2GAP>>{
}

note top of Driver
stimulating factors that provoke energyrelated
occupant behavior.
end note

note bottom of EnvironmentalBuildingFactors
We have to restrict the observation values to those systems
values (temperature, humidity, etc)
end note

note top of Needs
there are certain physical needs that people must meet in order to survive. There are
others that make people more comfortable. In the specific ways they
strive to meet these needs, people are different
end note

note top of ThermalComfort
combination of indoor air temperature and humidity, surrounding surface temperatures, indoor
air velocity, activity level, incident radiation and clothing level of the occupant
end note

note top of VisualComfort
comfort such as not being subjected to glare, excessive contrast or unacceptable levels of brightness
end note

note bottom of AcousticComfort
With the level of background noise within an acceptable range
end note

note bottom of IAQ
Indoor environmental health, meaning good IAQ or humidity
end note

note top of ComfortState
Comfort state is the result from the violation of user needs measured through the
drivers.
end note

/'
Description of the Ifc Actor relations
'/

IfcActor <|-- User
IfcActor--> Role: hit2gap:hasRole
IfcActor --> Device:hit2gap:acts

Role ..[#orchid] Manager
Role ..[#orchid] Owner
Role ..[#orchid] Technician
User <|-- IfcOccupant

/'
Description of Feedback and Reporting
'/

Feedback <|-- Report
Notification <|-- Alert
Notification <|-- Recommendation
User --> Modality: hit2gap:prefers
Modality ..[#orchid] SMS
Modality ..[#orchid] Email
Modality ..[#orchid] Phone

User --> Notification:hit2gap:receives
User --> Feedback:hit2gap:concerns


/'
Description of the SSN model adapted to buildign observation
'/

FeatureOfInterest <|-- SampledFeatures
FeatureOfInterest <|-- SamplingFeatures
Observation --> FeatureOfInterest: ssn:featureOfInterest
Observation--> SensorOutput: ssn:observationResult
SensorOutput --> ObservationValue: ssn_hasValue
ObservationValue --> Unit:qudt:unit
Observation --> Instant: ssn:observationResultTime
Observation --> DateTimeInterval: ssn:observationResultTime
FeatureOfInterest --> Property: ssn:hasProperty

SampledFeatures <|-- IfcBuilding
IfcBuilding <|-- IfcSpatialStructureElement
IfcSpatialStructureElement <|-- IfcZone
IfcSpatialStructureElement<|-- ZoneElement
IfcBuilding <|-- MechanicElement
IfcBuilding <|-- ElectricElement

/'
Definition of the Property subclasses
'/

Property <|-- ChemicalProperty
Property <|-- EconomicProperty
Property <|-- PhysicProperty

/'
Description of building states
'/
System <|-- BuildingState
BuildingState <|-- BuildingSimpleState
BuildingState <|-- BuildingComplexState
BuildingComplexState <|-- EnergyState
BuildingComplexState <|-- ComfortState
ComfortState <|-- OccupantComfort
ComfortState <|-- OccupantDiscomfort
System <|-- Device
System --> System:ssn:hasSubsystem
Device <|-- Sensor
Sensor --> Observation:ssn:observedBy
Sensor --> Property:ssn:observes

Observation <|-- Driver

/'
Description of driver (old SIM_MOD)
'/

Driver <|-- BehaviourModel
Driver <|-- ActivityModel
Driver <|-- EventModel
Driver <|-- EquipementModel

EventModel --> OccupantEvent:hit2gap:isBasedOn
EquipementModel --> EnvironmentalBuildingFactors: hit2gap:isBasedOn
BehaviourModel <|-- TimeBehaviour: hit2gap:isBasedOn

TimeBehaviour <|-- Season
TimeBehaviour <|-- Instant
TimeBehaviour <|-- DayOfWeek
TimeBehaviour <|-- DateTimeInterval
Season ..[#orchid] Winter
Season..[#orchid] Summer
Season..[#orchid] Spring
Season..[#orchid] Autum


/'
Definition of occupant attitude and IfcOccupants and their
corresponding roles.
'/

OccupantAttitude <|-- EnergyFrugal
OccupantAttitude <|-- EnergyProfligate
OccupantAttitude <|-- EnergyIndiferent


IfcOccupant --> OccupantRole: hit2gap:hasOccupantRole
IfcOccupant --> OccupantCharacteristics: hit2gap:hasOccupantCharacteristics
IfcOccupant --> Needs: hit2gap:hasComfortRequirements
IfcOccupant --> OccupantAttitude:hit2gap:hasOccupantAttitude
IfcOccupant --> System:hit2gap:interactsWith
IfcOccupant --> Actions: hit2gap:performsAction

/'
 Definition of the occupant needs and comfort
'/
Needs --> Privacy:hit2gap:hasPrivacy
Needs --> OccupantPreference:hit2gap:hasPreferences
OccupantPreference ..[#orchid] Luminosity
OccupantPreference ..[#orchid] Noise
OccupantPreference ..[#orchid] Temperature

Needs <|-- ThermalComfort
Needs<|-- VisualComfort
Needs <|-- AcousticComfort
Needs <|-- IAQ

ThermalComfort<|-- ISOAdaptiveComfort
ThermalComfort<|-- ASHRAEAdaptiveComfort
ThermalComfort<|-- ASHRAEAdaptiveEnvelope
ThermalComfort<|-- OtherComfortEnvelope

/'
 Definition of the actions
'/

Actions <|-- SystemActions
Actions <|-- Inaction
Actions <|-- Feedback
Actions <|-- OccupantEvent

Actions --> OccupantDiscomfort:hit2gap:provoke
SystemActions --> IfcDistributionControlElement:hit2gap:changes
IfcDistributionControlElement --> Alert: hit2gap:receivesAlert
SystemActions --> Device: hit2gap:actuateOver
Actions --> IfcSpatialStructureElement: hit2gap:change

@enduml
